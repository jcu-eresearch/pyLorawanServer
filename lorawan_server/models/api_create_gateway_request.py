# coding: utf-8

"""
    LoRa App Server REST API

     For more information about the usage of the LoRa App Server (REST) API, see [https://docs.loraserver.io/lora-app-server/api/](https://docs.loraserver.io/lora-app-server/api/).   # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ApiCreateGatewayRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'altitude': 'float',
        'channel_configuration_id': 'str',
        'description': 'str',
        'latitude': 'float',
        'longitude': 'float',
        'mac': 'str',
        'name': 'str',
        'organization_id': 'str',
        'ping': 'bool'
    }

    attribute_map = {
        'altitude': 'altitude',
        'channel_configuration_id': 'channelConfigurationID',
        'description': 'description',
        'latitude': 'latitude',
        'longitude': 'longitude',
        'mac': 'mac',
        'name': 'name',
        'organization_id': 'organizationID',
        'ping': 'ping'
    }

    def __init__(self, altitude=None, channel_configuration_id=None, description=None, latitude=None, longitude=None, mac=None, name=None, organization_id=None, ping=None):  # noqa: E501
        """ApiCreateGatewayRequest - a model defined in Swagger"""  # noqa: E501

        self._altitude = None
        self._channel_configuration_id = None
        self._description = None
        self._latitude = None
        self._longitude = None
        self._mac = None
        self._name = None
        self._organization_id = None
        self._ping = None
        self.discriminator = None

        if altitude is not None:
            self.altitude = altitude
        if channel_configuration_id is not None:
            self.channel_configuration_id = channel_configuration_id
        if description is not None:
            self.description = description
        if latitude is not None:
            self.latitude = latitude
        if longitude is not None:
            self.longitude = longitude
        if mac is not None:
            self.mac = mac
        if name is not None:
            self.name = name
        if organization_id is not None:
            self.organization_id = organization_id
        if ping is not None:
            self.ping = ping

    @property
    def altitude(self):
        """Gets the altitude of this ApiCreateGatewayRequest.  # noqa: E501

        Altitude of the gateway in meters  # noqa: E501

        :return: The altitude of this ApiCreateGatewayRequest.  # noqa: E501
        :rtype: float
        """
        return self._altitude

    @altitude.setter
    def altitude(self, altitude):
        """Sets the altitude of this ApiCreateGatewayRequest.

        Altitude of the gateway in meters  # noqa: E501

        :param altitude: The altitude of this ApiCreateGatewayRequest.  # noqa: E501
        :type: float
        """

        self._altitude = altitude

    @property
    def channel_configuration_id(self):
        """Gets the channel_configuration_id of this ApiCreateGatewayRequest.  # noqa: E501

        ID of the channel-configuration.  # noqa: E501

        :return: The channel_configuration_id of this ApiCreateGatewayRequest.  # noqa: E501
        :rtype: str
        """
        return self._channel_configuration_id

    @channel_configuration_id.setter
    def channel_configuration_id(self, channel_configuration_id):
        """Sets the channel_configuration_id of this ApiCreateGatewayRequest.

        ID of the channel-configuration.  # noqa: E501

        :param channel_configuration_id: The channel_configuration_id of this ApiCreateGatewayRequest.  # noqa: E501
        :type: str
        """

        self._channel_configuration_id = channel_configuration_id

    @property
    def description(self):
        """Gets the description of this ApiCreateGatewayRequest.  # noqa: E501

        A description for the gateway  # noqa: E501

        :return: The description of this ApiCreateGatewayRequest.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiCreateGatewayRequest.

        A description for the gateway  # noqa: E501

        :param description: The description of this ApiCreateGatewayRequest.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def latitude(self):
        """Gets the latitude of this ApiCreateGatewayRequest.  # noqa: E501

        Latitude of the gateway -90 to 90  # noqa: E501

        :return: The latitude of this ApiCreateGatewayRequest.  # noqa: E501
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this ApiCreateGatewayRequest.

        Latitude of the gateway -90 to 90  # noqa: E501

        :param latitude: The latitude of this ApiCreateGatewayRequest.  # noqa: E501
        :type: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this ApiCreateGatewayRequest.  # noqa: E501

        Longitude of the gateway -180 to 180  # noqa: E501

        :return: The longitude of this ApiCreateGatewayRequest.  # noqa: E501
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this ApiCreateGatewayRequest.

        Longitude of the gateway -180 to 180  # noqa: E501

        :param longitude: The longitude of this ApiCreateGatewayRequest.  # noqa: E501
        :type: float
        """

        self._longitude = longitude

    @property
    def mac(self):
        """Gets the mac of this ApiCreateGatewayRequest.  # noqa: E501

        Hex encoded mac address.  # noqa: E501

        :return: The mac of this ApiCreateGatewayRequest.  # noqa: E501
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this ApiCreateGatewayRequest.

        Hex encoded mac address.  # noqa: E501

        :param mac: The mac of this ApiCreateGatewayRequest.  # noqa: E501
        :type: str
        """

        self._mac = mac

    @property
    def name(self):
        """Gets the name of this ApiCreateGatewayRequest.  # noqa: E501

        A name for the gateway  # noqa: E501

        :return: The name of this ApiCreateGatewayRequest.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApiCreateGatewayRequest.

        A name for the gateway  # noqa: E501

        :param name: The name of this ApiCreateGatewayRequest.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def organization_id(self):
        """Gets the organization_id of this ApiCreateGatewayRequest.  # noqa: E501

        ID of the organization to which this gateway belongs.  # noqa: E501

        :return: The organization_id of this ApiCreateGatewayRequest.  # noqa: E501
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this ApiCreateGatewayRequest.

        ID of the organization to which this gateway belongs.  # noqa: E501

        :param organization_id: The organization_id of this ApiCreateGatewayRequest.  # noqa: E501
        :type: str
        """

        self._organization_id = organization_id

    @property
    def ping(self):
        """Gets the ping of this ApiCreateGatewayRequest.  # noqa: E501

        Gateway sends out a periodic ping.  # noqa: E501

        :return: The ping of this ApiCreateGatewayRequest.  # noqa: E501
        :rtype: bool
        """
        return self._ping

    @ping.setter
    def ping(self, ping):
        """Sets the ping of this ApiCreateGatewayRequest.

        Gateway sends out a periodic ping.  # noqa: E501

        :param ping: The ping of this ApiCreateGatewayRequest.  # noqa: E501
        :type: bool
        """

        self._ping = ping

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ApiCreateGatewayRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiCreateGatewayRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
