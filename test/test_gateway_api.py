# coding: utf-8

"""
    LoRa App Server REST API

     For more information about the usage of the LoRa App Server (REST) API, see [https://docs.loraserver.io/lora-app-server/api/](https://docs.loraserver.io/lora-app-server/api/).   # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import lorawan_server
from lorawan_server.api.gateway_api import GatewayApi  # noqa: E501
from lorawan_server.rest import ApiException


class TestGatewayApi(unittest.TestCase):
    """GatewayApi unit test stubs"""

    def setUp(self):
        self.api = lorawan_server.api.gateway_api.GatewayApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create(self):
        """Test case for create

        Create creates the given gateway.  # noqa: E501
        """
        pass

    def test_create_channel_configuration(self):
        """Test case for create_channel_configuration

        CreateChannelConfiguration creates the given channel-configuration.  # noqa: E501
        """
        pass

    def test_create_extra_channel(self):
        """Test case for create_extra_channel

        CreateExtraChannel creates the given extra channel.  # noqa: E501
        """
        pass

    def test_delete(self):
        """Test case for delete

        Delete deletes the gateway matching the given mac address.  # noqa: E501
        """
        pass

    def test_delete_channel_configuration(self):
        """Test case for delete_channel_configuration

        DeleteChannelConfiguration deletes the channel-configuration matching the given ID.  # noqa: E501
        """
        pass

    def test_delete_extra_channel(self):
        """Test case for delete_extra_channel

        DeleteExtraChannel deletes the extra channel matching the given id.  # noqa: E501
        """
        pass

    def test_generate_token(self):
        """Test case for generate_token

        GenerateToken issues a JWT token which can be used by the gateway for authentication.  # noqa: E501
        """
        pass

    def test_get(self):
        """Test case for get

        Get returns the gateway for the requested mac address.  # noqa: E501
        """
        pass

    def test_get_channel_configuration(self):
        """Test case for get_channel_configuration

        GetChannelConfiguration returns the channel-configuration for the given ID.  # noqa: E501
        """
        pass

    def test_get_extra_channels_for_channel_configuration_id(self):
        """Test case for get_extra_channels_for_channel_configuration_id

        GetExtraChannelsForChannelConfigurationID returns the extra channels for the given channel-configuration id.  # noqa: E501
        """
        pass

    def test_get_last_ping(self):
        """Test case for get_last_ping

        GetLastPing returns the last emitted ping and gateways receiving this ping.  # noqa: E501
        """
        pass

    def test_get_stats(self):
        """Test case for get_stats

        GetStats lists the gateway stats given the query parameters.  # noqa: E501
        """
        pass

    def test_list(self):
        """Test case for list

        List lists the gateways.  # noqa: E501
        """
        pass

    def test_list_channel_configurations(self):
        """Test case for list_channel_configurations

        ListChannelConfigurations returns all channel-configurations.  # noqa: E501
        """
        pass

    def test_update(self):
        """Test case for update

        Update updates the gateway matching the given mac address.  # noqa: E501
        """
        pass

    def test_update_channel_configuration(self):
        """Test case for update_channel_configuration

        UpdateChannelConfiguration updates the given channel-configuration.  # noqa: E501
        """
        pass

    def test_update_extra_channel(self):
        """Test case for update_extra_channel

        UpdateExtraChannel updates the given extra channel.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
